openapi: 3.0.0
info:
  title: banking API
  version: 1.0.0
servers:
- url: http://webservice_bankingapps.org
  description: web service 
paths:
  /authentication/:
    post:
      summary: Access banking web site
      tags:
        - login
      requestBody:
        description: user data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: OK   
  /account/{accountId}:
    get:
      summary: Returns a account by ID.
      tags:
        - account
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      summary: Update account information
      tags:
        - account
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Acccount data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: OK
    delete:
      summary: Delete a account by ID.
      tags:
        - account
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /account/:
    post:
      summary: Create a new account
      tags:
        - account
      requestBody:
        description: account data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: OK      
  /account/all:
    get:
      summary: All accounts.
      tags:
        - account
      responses:
        '200':
          $ref: '#/components/responses/account'       
  /customer/{customerId}:
    get:
      summary: Returns a customer by ID.
      tags:
        - customer
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      summary: Update customer information
      tags:
        - customer
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Customer data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: OK
    delete:
      summary: Delete a customer by ID.
      tags:
        - customer
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /customer/:
    post:
      summary: Create a new customer
      tags:
        - customer
      requestBody:
        description: customer data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: OK                
components:
  schemas:
    Login:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        password:
          type: "string"
      xml:
        name: "Login"
      example:
       id: 1
       password: Nothing    
    Customer:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        customerName:
          type: "string"
        birthDate:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          description: "Customer Status"
          enum:
          - "active"
          - "inactive"
        debtDate:
          type: "boolean"
          default: false   
      xml:
        name: "Customer" 
    Account:
      type: "object"
      properties:
        accountNumber:
          type: "integer"
          format: "int64"
        accountType:
          type: "string"
          description: "Account Type"
          enum:
          - "saving"
          - "checking"  
        balance:
          type: "number"
          format: "float"
        allowOverdraft:
          type: "boolean"  
        overdraft:
          type: "number"
          format: "float"
      xml:
        name: "Account"      
    GeneralResponse:
      description: General response to be used for other responses
      type: object
      properties:
        messageCode:
          type: string
          example: Operation OK
        messageDescription:
          type: string
          example: Message Description    
  responses:
    account:
      description: Operation was executed successfully
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GeneralResponse'
              - type: object
                properties:
                  objectContent:
                    description: Accounts array
                    type: array
                    items:
                        $ref: '#/components/schemas/Account'
